'use client'

import { useState } from 'react'
import { motion } from 'framer-motion'
import { Code, Copy, ExternalLink, CreditCard, Settings, Zap } from 'lucide-react'

export default function DeveloperDocsPage() {
  const [activeTab, setActiveTab] = useState('overview')

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text)
    alert('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!')
  }

  const codeExamples = {
    createPayment: `// –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏
const response = await fetch('https://tgwallet-ei8z.vercel.app/api/payments/create-link', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer YOUR_JWT_TOKEN'
  },
  body: JSON.stringify({
    amount: 1000,
    description: '–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä',
    return_url: 'https://yoursite.com/success',
    webhook_url: 'https://yoursite.com/webhook',
    currency: 'RUB',
    expires_in: 3600
  })
})

const data = await response.json()
console.log(data.payment_url) // –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã`,

    embedButton: `<!-- HTML –∫–æ–¥ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ -->
<div id="stellex-pay-button">
  <button 
    onclick="window.open('PAYMENT_URL', '_blank')"
    style="
      width: 100%;
      padding: 16px 24px;
      background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);
      color: white;
      border: none;
      border-radius: 12px;
      font-weight: bold;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
    "
  >
    <div style="width: 20px; height: 20px; background: rgba(255,255,255,0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 12px;">S</div>
    <span>–û–ü–õ–ê–¢–ò–¢–¨ –° –ü–û–ú–û–©–¨–Æ STELLEX PAY</span>
    <span style="font-size: 14px; opacity: 0.8;">1 000 ‚ÇΩ</span>
  </button>
</div>`,

    webhook: `// Webhook –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–ª–∞—Ç–µ–∂–∞—Ö
app.post('/webhook', (req, res) => {
  const { payment_id, status, amount, description } = req.body
  
  if (status === 'completed') {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    console.log('–ü–ª–∞—Ç–µ–∂ –≤—ã–ø–æ–ª–Ω–µ–Ω:', payment_id, amount)
    // –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –≤–∞—à–µ–π –ë–î
  }
  
  res.json({ success: true })
})`,

    react: `import StellexPayButton from 'stellex-pay-button'

function MyComponent() {
  return (
    <StellexPayButton
      paymentUrl="https://tgwallet-ei8z.vercel.app/pay/stl_1234567890"
      amount={1000}
      currency="RUB"
      description="–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä"
      style="primary"
      size="lg"
    />
  )
}`
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-4">
      <div className="max-w-6xl mx-auto pt-12">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-white mb-4">Stellex Pay API</h1>
          <p className="text-xl text-white/70 mb-6">
            –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –ø–ª–∞—Ç–µ–∂–∏ –≤ –≤–∞—à–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          </p>
          <div className="flex items-center justify-center space-x-4 text-white/60">
            <div className="flex items-center space-x-2">
              <Zap className="w-5 h-5" />
              <span>–ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</span>
            </div>
            <div className="flex items-center space-x-2">
              <CreditCard className="w-5 h-5" />
              <span>–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</span>
            </div>
            <div className="flex items-center space-x-2">
              <Settings className="w-5 h-5" />
              <span>–ì–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span>
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="flex space-x-1 mb-8 bg-white/10 rounded-xl p-1">
          {[
            { id: 'overview', label: '–û–±–∑–æ—Ä', icon: ExternalLink },
            { id: 'api', label: 'API', icon: Code },
            { id: 'integration', label: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', icon: Settings },
            { id: 'examples', label: '–ü—Ä–∏–º–µ—Ä—ã', icon: Copy }
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg transition-all duration-300 ${
                activeTab === tab.id
                  ? 'bg-purple-600 text-white'
                  : 'text-white/70 hover:text-white hover:bg-white/10'
              }`}
            >
              <tab.icon className="w-5 h-5" />
              <span>{tab.label}</span>
            </button>
          ))}
        </div>

        {/* Content */}
        <div className="glass-dark rounded-2xl p-8">
          {activeTab === 'overview' && (
            <div className="space-y-8">
              <div>
                <h2 className="text-2xl font-bold text-white mb-4">–ß—Ç–æ —Ç–∞–∫–æ–µ Stellex Pay?</h2>
                <p className="text-white/80 text-lg leading-relaxed">
                  Stellex Pay ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º 
                  –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Å–≤–æ–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏, 
                  –≤—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–ª–∞—Ç–µ–∂–µ–π.
                </p>
              </div>

              <div className="grid md:grid-cols-2 gap-6">
                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-3">üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç</h3>
                  <p className="text-white/70">
                    –°–æ–∑–¥–∞–π—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–ª–∞—Ç–µ–∂–∏
                  </p>
                </div>
                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-3">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                  <p className="text-white/70">
                    –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                  </p>
                </div>
                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-3">‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h3>
                  <p className="text-white/70">
                    –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </p>
                </div>
                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-3">üõ†Ô∏è –ì–∏–±–∫–æ—Å—Ç—å</h3>
                  <p className="text-white/70">
                    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏, webhook&apos;–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ª—é–±—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏
                  </p>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'api' && (
            <div className="space-y-8">
              <div>
                <h2 className="text-2xl font-bold text-white mb-4">API Endpoints</h2>
                <p className="text-white/80 mb-6">
                  –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö API –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Stellex Pay
                </p>
              </div>

              <div className="space-y-6">
                <div className="bg-white/5 p-6 rounded-xl">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold text-white">POST /api/payments/create-link</h3>
                    <span className="px-3 py-1 bg-green-500/20 text-green-400 rounded-full text-sm">
                      –°–æ–∑–¥–∞–Ω–∏–µ
                    </span>
                  </div>
                  <p className="text-white/70 mb-4">
                    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π
                  </p>
                  <div className="bg-black/20 p-4 rounded-lg">
                    <pre className="text-white/80 text-sm">
{`Headers:
  Authorization: Bearer YOUR_JWT_TOKEN
  Content-Type: application/json

Body:
{
  "amount": 1000,
  "description": "–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä",
  "return_url": "https://yoursite.com/success",
  "webhook_url": "https://yoursite.com/webhook",
  "currency": "RUB",
  "expires_in": 3600
}`}
                    </pre>
                  </div>
                </div>

                <div className="bg-white/5 p-6 rounded-xl">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold text-white">GET /api/payments/my-links</h3>
                    <span className="px-3 py-1 bg-blue-500/20 text-blue-400 rounded-full text-sm">
                      –ü–æ–ª—É—á–µ–Ω–∏–µ
                    </span>
                  </div>
                  <p className="text-white/70 mb-4">
                    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  </p>
                </div>

                <div className="bg-white/5 p-6 rounded-xl">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold text-white">GET /api/payments/[id]</h3>
                    <span className="px-3 py-1 bg-blue-500/20 text-blue-400 rounded-full text-sm">
                      –ü–æ–ª—É—á–µ–Ω–∏–µ
                    </span>
                  </div>
                  <p className="text-white/70 mb-4">
                    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–µ
                  </p>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'integration' && (
            <div className="space-y-8">
              <div>
                <h2 className="text-2xl font-bold text-white mb-4">–°–ø–æ—Å–æ–±—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h2>
                <p className="text-white/80 mb-6">
                  –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–ø–æ—Å–æ–± –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Stellex Pay –≤ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                </p>
              </div>

              <div className="space-y-6">
                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-4">1. –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞</h3>
                  <p className="text-white/70 mb-4">
                    –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
                  </p>
                  <div className="bg-black/20 p-4 rounded-lg">
                    <pre className="text-white/80 text-sm">
{`// –°–æ–∑–¥–∞–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const paymentUrl = "https://tgwallet-ei8z.vercel.app/pay/stl_1234567890"
window.location.href = paymentUrl`}
                    </pre>
                  </div>
                </div>

                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-4">2. –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è –∫–Ω–æ–ø–∫–∞</h3>
                  <p className="text-white/70 mb-4">
                    –î–æ–±–∞–≤—å—Ç–µ –≥–æ—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É
                  </p>
                  <div className="bg-black/20 p-4 rounded-lg">
                    <pre className="text-white/80 text-sm">
{`<!-- HTML –∫–æ–¥ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è -->
<button onclick="window.open('PAYMENT_URL', '_blank')">
  –û–ü–õ–ê–¢–ò–¢–¨ –° –ü–û–ú–û–©–¨–Æ STELLEX PAY
</button>`}
                    </pre>
                  </div>
                </div>

                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-4">3. React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç</h3>
                  <p className="text-white/70 mb-4">
                    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
                  </p>
                  <div className="bg-black/20 p-4 rounded-lg">
                    <pre className="text-white/80 text-sm">
{`import StellexPayButton from 'stellex-pay-button'

<StellexPayButton
  paymentUrl={paymentUrl}
  amount={1000}
  currency="RUB"
  style="primary"
  size="lg"
/>`}
                    </pre>
                  </div>
                </div>

                <div className="bg-white/5 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-white mb-4">4. Webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                  <p className="text-white/70 mb-4">
                    –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                  </p>
                  <div className="bg-black/20 p-4 rounded-lg">
                    <pre className="text-white/80 text-sm">
{`// –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook URL –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
{
  "webhook_url": "https://yoursite.com/webhook",
  "amount": 1000,
  "description": "–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä"
}`}
                    </pre>
                  </div>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'examples' && (
            <div className="space-y-8">
              <div>
                <h2 className="text-2xl font-bold text-white mb-4">–ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞</h2>
                <p className="text-white/80 mb-6">
                  –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ —Å Stellex Pay
                </p>
              </div>

              <div className="space-y-6">
                {Object.entries(codeExamples).map(([key, code]) => (
                  <div key={key} className="bg-white/5 p-6 rounded-xl">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="text-xl font-bold text-white capitalize">
                        {key.replace(/([A-Z])/g, ' $1').trim()}
                      </h3>
                      <button
                        onClick={() => copyToClipboard(code)}
                        className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center space-x-2"
                      >
                        <Copy className="w-4 h-4" />
                        <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</span>
                      </button>
                    </div>
                    <div className="bg-black/20 p-4 rounded-lg overflow-x-auto">
                      <pre className="text-white/80 text-sm whitespace-pre-wrap">{code}</pre>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}
